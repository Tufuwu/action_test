- vsock_test:
    no Windows
    type = vsock_test
    vsocks = vhost_vsock0
    # TODO: Work out a python version nc-vsock and use the APIs directly
    variants:
        - @basic_test:
        - negative_test:
            type = vsock_negative_test
        - hotplug:
            type = vsock_hotplug
            vsocks = ''
            addr_pattern = '\d\d:\d\d\.\d'
            device_pattern = 'Communication controller: Red Hat.* Device'
            q35: 
              device_pattern = 'Communication controller: Red Hat.* Virtio socket'
              RHEL.7, RHEL.8.1, RHEL.8.2:
                device_pattern = 'Communication controller: Red Hat.* Device'
            s390x:
              check_vsock_cmd = 'lscss'
              addr_pattern = '0.1.2345'
              device_pattern = '\d\.\d\.\d\d\d\d'
              dmesg_check = 'no'
              devno = 'fe.1.2345'
        - migration_with_vsock:
            type = migration_with_vsock
        - iommu_enabled:
            no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1 RHEL.8.2 RHEL.8.3 RHEL.8.4
            required_qemu = [5.2.0,)
            #refer to bug 1879052,1894101
            virtio_dev_iommu_platform = on
            x86_64:
                only q35
                machine_type_extra_params = "kernel-irqchip=split"
                virtio_dev_ats = on
                HostCpuVendor.intel:
                    intel_iommu = yes
                    enable_guest_iommu = yes
            ppc64, ppc64le:
                virtio_dev_disable_legacy = on
                virtio_dev_disable_modern = off
