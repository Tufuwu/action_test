- virtio_mode:
    type = virtio_mode
    kill_vm = yes
    no s390x
    i386:
        devcon_folder = "WIN_UTILS:\devcon\x86\"
    x86_64:
        devcon_folder = "WIN_UTILS:\devcon\amd64\"
    variants:
        - with_modern:
            no RHEL.6
            virtio_dev_disable_modern = false
            virtio_dev_disable_legacy = on
            virtio_mode = modern
        - with_transitional:
            virtio_dev_disable_modern = false
            virtio_dev_disable_legacy = off
            virtio_mode = transitional
        - with_legacy:
            virtio_dev_disable_modern = true
            virtio_dev_disable_legacy = off
            virtio_mode = legacy
    variants:
        - with_netkvm:
            only virtio_net
            driver_name = netkvm
            device_type = "virtio-net-pci"
            device_name = "Red Hat VirtIO Ethernet Adapter.*"
            pci_id_pattern = "(\d+:\d+\.\d+)\s+Ethernet controller:.*?Virtio network device"
        - with_viorng:
            driver_name = viorng
            device_type = "virtio-rng-pci"
            device_name = "VirtIO RNG Device"
            pci_id_pattern = "(\d+:\d+\.\d+)\s+Unclassified device\s.*?Virtio RNG"
            no_virtio_rng:
                virtio_rngs += " rng0"
            variants:
                - with_rng_builtin:
                    only no_virtio_rng
                    required_qemu = [4.2, )
                    backend_rng0 = rng-builtin
                    backend_type = builtin
                - with_rng_random:
                    only no_virtio_rng
                    backend_rng0 = rng-random
                    backend_type = passthrough
                    filename_passthrough = /dev/urandom
                - @default:
                    only virtio_rng
        - with_viostor:
            only virtio_blk
            driver_name = viostor
            device_type = "virtio-blk-pci"
            device_name = "Red Hat VirtIO SCSI controller"
            pci_id_pattern = "(\d+:\d+\.\d+)\s+SCSI storage controller:.*?Virtio block device"
        - with_vioscsi:
            only virtio_scsi
            driver_name = vioscsi
            device_type = "virtio-scsi-pci"
            device_name = "Red Hat VirtIO SCSI pass-through controller"
            pci_id_pattern = "(\d+:\d+\.\d+)\s+SCSI storage controller:.*?Virtio SCSI"
        - with_vioserial:
            only Windows
            driver_name = vioser
            serials += " vs"
            serial_type_vs = virtserialport
            device_type = "virtio-serial-pci"
            device_name = "VirtIO Serial Driver"
            pci_id_pattern = "(\d+:\d+\.\d+)\s+Communication controller:.*?Virtio console"
        - with_balloon:
            driver_name = balloon
            balloon = balloon0
            balloon_dev_devid = balloon0
            balloon_dev_add_bus = yes
            device_name = "VirtIO Balloon Driver"
            device_type = "virtio-balloon-pci"
            pci_id_pattern = "(\d+:\d+\.\d+)\s+Unclassified device\s.*?Virtio memory balloon"
