meta:
  name: Verify CK Conformance
  description: |
    Verifies that CK passes CNCF conformance spec
  mkdocs:
    destination:
      - "validations/conformance/index.md"

matrix:
  snap_version:
    - 1.18/stable
  series:
    - bionic
  channel:
    - stable
  arch:
    - amd64

plan:
  env:
    - JUJU_DEPLOY_CHANNEL=$CHANNEL
    - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
    - JUJU_CLOUD=aws/us-east-1
    - JUJU_CONTROLLER=validate-ck-conformance
    - JUJU_MODEL=validate-conformance
    - SONOBUOY_VERSION=0.18.0

  pre-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    setup_env

    rm -rf sonobuoy.*
    wget https://github.com/vmware-tanzu/sonobuoy/releases/download/v"$SONOBUOY_VERSION"/sonobuoy_"$SONOBUOY_VERSION"_linux_amd64.tar.gz
    tar xvf sonobuoy_"$SONOBUOY_VERSION"_linux_amd64.tar.gz

    juju bootstrap $JUJU_CLOUD $JUJU_CONTROLLER \
         -d $JUJU_MODEL \
         --bootstrap-series $SERIES \
         --force \
         --bootstrap-constraints arch=$ARCH \
         --model-default test-mode=true \
         --model-default resource-tags=owner=k8sci \
         --model-default image-stream=daily

    tee overlay.yaml <<EOF> /dev/null
    series: $SERIES
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
    EOF

    juju deploy -m $JUJU_CONTROLLER:$JUJU_MODEL \
          --overlay overlay.yaml \
          --force \
          --channel $JUJU_DEPLOY_CHANNEL $JUJU_DEPLOY_BUNDLE

    timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

  execute: |
    #!/bin/bash
    set -eu

    . $WORKSPACE/cilib.sh

    inject_env

    mkdir -p $HOME/.kube
    juju scp -m $JUJU_CONTROLLER:$JUJU_MODEL kubernetes-master/0:config $HOME/.kube/
    export RBAC_ENABLED=$(kubectl api-versions | grep \"rbac.authorization.k8s.io/v1beta1\" -c)
    kubectl version
    ./sonobuoy version
    ./sonobuoy run --mode=certified-conformance --wait 2>&1
    ./sonobuoy retrieve
    cp *_sonobuoy_* $OGC_JOB_WORKDIR/.

  post-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    inject_env

    collect_env

    teardown_env
